import glob
import PIL.Image


def main():
    l = glob.glob('D:/students/dnn/assignment2/test/images/*')
    #l = glob.glob('D:/students/dnn/assignment2/training/labels_plain/*')

    lsize = len(l)
    pixels_values = set()
    sizes = {}
    widther, heighter = 0, 0
    for i, f in enumerate(l):
        #if f[-4:] != '.png':
        if f[-4:] != '.jpg':
            print('Skipping file: {} '.format(f))
            continue
        print('{} / {} '.format(i, lsize), end='\r')
        #im = PIL.Image.open(f).convert('RGB')  # note: should be np.array(im)
        #colors = list(map(lambda x: x[1], im.getcolors()))
        #for c in colors:
        #    pixels_values.add(c)
        #size = im.size
        #if size[0] > size[1]:
        #    widther += 1
        #else:
        #    heighter += 1
        im = PIL.Image.open(f)
        sizes[im.size] = sizes.get(im.size, 0) + 1

    #print('\nLarger: width {}, height: {}'.format(widther, heighter))
    #print('Values:\n\tmin: {},\n\tmax: {},\n\tdifferent values: {}'.format(
    #      None, None,  # min(pixels_values), max(pixels_values),
    #      len(pixels_values)))
    #print('Values:')
    #print(pixels_values)
    print('resolutions:', sizes)


if __name__ == '__main__':
    main()

# Out:
# (tf) aj370953@sylvester:~$ srun /home/aj370953/.virtualenvs/tf/bin/python3.5 test.py
# Skipping file: /scidata/assignment2/training/labels/sample2.zip
# 18000 / 18001
# Values:
#         min: 0,
#         max: 65,
#         different values: 66
# Values:
# {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65}
# (tf) aj370953@sylvester:~$

# resolutions
# training: {(4032, 3024): 1490, (3264, 2448): 7603, (3984, 2988): 1374, (2048, 1536): 404, (3840, 2160): 636, (4160, 3120): 468, (2592, 1458): 16, (3680, 2760): 301, (4608, 3456): 460, (2592, 1944): 380, (2560, 1920): 363, (4128, 3096): 548, (2976, 2976): 36, (1024, 768): 43, (1920, 1080): 489, (3200, 1800): 6, (5376, 3752): 27, (2048, 1520): 8, (4000, 3000): 350, (3600, 2160): 10, (2688, 1520): 11, (4033, 3025): 56, (4000, 2240): 9, (5312, 2988): 143, (5184, 3456): 7, (4608, 2592): 218, (3072, 1728): 2, (1600, 1200): 120, (2560, 1536): 25, (2012, 1341): 20, (3456, 2304): 1, (3264, 1836): 445, (1600, 1184): 39, (3840, 2304): 2, (4208, 3120): 6, (4096, 2160): 77, (3264, 1968): 21, (2592, 1936): 525, (1280, 960): 20, (1624, 1234): 25, (2592, 1456): 30, (3264, 1840): 22, (1280, 720): 77, (3232, 2424): 42, (3265, 2449): 197, (4128, 2752): 2, (2000, 1500): 21, (5248, 3936): 184, (2608, 1960): 4, (3000, 2250): 54, (4608, 2316): 1, (2304, 1296): 9, (2013, 1342): 14, (3200, 2400): 73, (2560, 1537): 9, (4496, 3000): 8, (4032, 2637): 12, (2560, 1440): 45, (2448, 2048): 8, (800, 600): 4, (2048, 1537): 4, (2048, 2048): 10, (4608, 2414): 4, (2576, 1932): 2, (3456, 2592): 8, (2448, 2050): 2, (4160, 3121): 4, (4590, 2136): 1, (2624, 1968): 26, (4032, 2268): 29, (2304, 1536): 9, (1800, 1200): 1, (2988, 3984): 4, (4096, 3072): 16, (5152, 3888): 24, (3121, 2341): 3, (2448, 2448): 12, (4096, 2304): 25, (3968, 2240): 4, (4608, 2237): 1, (3096, 4128): 10, (3008, 2256): 5, (2400, 1800): 10, (3264, 1837): 4, (3520, 2640): 3, (4608, 3072): 4, (2448, 1836): 2, (3264, 2176): 1, (3153, 2365): 6, (3024, 2016): 6, (4274, 2214): 1, (3552, 2000): 1, (3200, 2368): 3, (4608, 2326): 1, (2880, 1728): 4, (4128, 2500): 1, (5664, 4240): 2, (4224, 3168): 4, (2593, 1945): 4, (4128, 2332): 1, (4032, 2933): 12, (1600, 1067): 4, (6528, 3680): 2, (3968, 2976): 1, (1728, 1728): 3, (1600, 1071): 2, (4000, 2250): 8, (4608, 1791): 1, (3104, 1744): 2, (3456, 5184): 1, (3985, 2989): 7, (1534, 1151): 1, (1920, 1440): 2, (2704, 1524): 6, (1355, 900): 1, (1440, 1080): 1, (2561, 1921): 3, (3328, 1872): 4, (4608, 1752): 1, (1400, 806): 3, (2256, 1692): 1, (3580, 1810): 3, (2880, 2160): 7, (4608, 2086): 3, (3648, 2736): 9, (2736, 3648): 1, (3052, 2289): 3, (4546, 3030): 2, (4320, 2432): 3, (2304, 1728): 1, (2688, 1512): 7, (4128, 3097): 1, (2333, 1750): 1, (1836, 3264): 1, (3936, 5248): 1, (4074, 3060): 1, (640, 480): 1, (4224, 3136): 1, (1280, 702): 1, (3624, 2109): 1, (2873, 2150): 2, (4128, 2322): 2, (4900, 2709): 1, (2593, 1937): 3, (3920, 2204): 2, (2720, 2040): 1, (4000, 2443): 1, (4192, 3104): 1, (4608, 2431): 2, (2448, 3264): 1, (750, 1000): 1, (2592, 1552): 3, (3120, 4208): 1, (4434, 3456): 1, (2977, 2977): 1, (5376, 3744): 1}
# test: {(3264, 2448): 804, (2048, 1536): 47, (1024, 768): 4, (3984, 2988): 170, (4032, 3024): 159, (4608, 3456): 65, (2560, 1920): 37, (4000, 3000): 42, (2013, 1342): 2, (4320, 2432): 1, (2592, 1458): 1, (5248, 3936): 25, (2592, 1936): 46, (4128, 3096): 61, (2048, 2048): 2, (4160, 3120): 49, (4608, 2592): 26, (2592, 1944): 41, (3985, 2989): 3, (2560, 1440): 3, (3265, 2449): 15, (3456, 2592): 2, (2000, 1500): 2, (3840, 2160): 67, (3264, 1836): 59, (3680, 2760): 29, (3096, 4128): 2, (1920, 1080): 69, (3000, 2250): 7, (5376, 3752): 7, (1280, 720): 7, (1500, 2000): 1, (3600, 2160): 1, (3200, 2400): 14, (4096, 2160): 5, (5312, 2988): 17, (1280, 960): 3, (2976, 2976): 3, (2400, 1800): 1, (2592, 1456): 5, (2012, 1509): 1, (1600, 1184): 3, (3264, 1840): 6, (2012, 1341): 3, (4000, 2250): 2, (4033, 3025): 5, (4608, 2335): 1, (2624, 1968): 3, (2448, 2448): 2, (4000, 2240): 1, (2560, 1537): 1, (2560, 1536): 3, (800, 600): 1, (2688, 1512): 2, (1600, 1200): 11, (4032, 2268): 7, (1521, 1140): 1, (2747, 2060): 1, (4096, 3072): 3, (1624, 1234): 5, (5152, 3888): 3, (4032, 2637): 1, (4208, 3120): 1, (5184, 3456): 1, (2988, 3984): 1, (2688, 1520): 1, (2048, 1520): 2, (4128, 2332): 1, (2608, 1960): 1, (4096, 2304): 3, (1800, 1200): 1, (3072, 1728): 1, (2593, 1937): 1, (3264, 1837): 1, (3232, 2424): 2, (3580, 1810): 1, (2048, 1537): 1, (2880, 2160): 1, (3052, 2289): 1, (4160, 3121): 1, (3008, 2256): 2, (3097, 4129): 1, (3968, 2240): 1, (3920, 2160): 1, (3024, 2016): 1, (4128, 2322): 1, (3328, 1872): 1}
